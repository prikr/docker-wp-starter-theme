(self["webpackChunkprikr_wp_starter"] = self["webpackChunkprikr_wp_starter"] || []).push([["src_js_trainingsaanbod_js"],{

/***/ "./src/js/trainingsaanbod.js":
/*!***********************************!*\
  !*** ./src/js/trainingsaanbod.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var crumbsjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crumbsjs */ "./node_modules/crumbsjs/dist/crumbs.js");
/* harmony import */ var crumbsjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crumbsjs__WEBPACK_IMPORTED_MODULE_0__);
/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

const viewCookie = crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().get('viewCookie');
const viewCookieLs = crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().ls.get('viewCookie');
/** 
 * jQuery: Send new jobalert query to database
 */

jQuery(document).ready(function ($) {
  /** 
   * Create new job alert ajax function
   */
  jQuery(document).on('click', '#submit_search_trainingsaanbod', e => {
    e.preventDefault();
    const formData = $('#form_trainingsaanbod').serialize();
    const replaceableList = document.querySelector('.replace_list');
    const deleteLink = document.querySelector('#deletefilters');
    const count = document.querySelector('#count');
    jQuery.ajax({
      type: 'POST',
      xhrFields: {
        withCredentials: true
      },
      url: mvr__trainingsaanbod_ajax.ajaxurl,
      data: {
        action: 'mvr_get_new_trainingsaanbod_results',
        payload: formData,
        nonce: mvr__trainingsaanbod_ajax.security
      },
      beforeSend: function () {
        replaceableList.classList.add('loading');
      },
      success: function (response) {
        replaceableList.innerHTML = response.data.html;
        count.innerHTML = response.data.count;
        replaceableList.classList.remove('loading');
        deleteLink.style.opacity = '1';
      },
      error: function (error) {
        console.log(error);
      }
    });
  });
});
const switchButtons = document.querySelectorAll('.switch-layout-button');
const hiddenInput = document.querySelector('#listview');
const switchbuttons = [...switchButtons];
switchbuttons.forEach(btn => {
  btn.addEventListener('click', e => {
    const layout = document.querySelector('#layout_switcher');
    console.log(layout);
    switchbuttons.forEach(insidebtn => {
      insidebtn.classList.remove('active');

      if (insidebtn === btn) {
        btn.classList.add('active');

        if (btn.dataset.type === 'list') {
          if (layout.classList.contains('list_view')) {
            return true;
          } else {
            layout.classList.remove('block_view');
            layout.classList.add('list_view');
            hiddenInput.setAttribute('value', 'list');
            crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().set("viewCookie", 'list', {
              type: "day",
              value: 7
            }, "/crumbsjs");
            crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().ls.set("viewCookie", 'list', {
              type: "day",
              value: 7
            }, "/crumbsjs");
          }
        } else if (btn.dataset.type === 'block') {
          if (layout.classList.contains('block_view')) {
            return true;
          } else {
            layout.classList.remove('list_view');
            layout.classList.add('block_view');
            hiddenInput.setAttribute('value', 'block');
            crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().set("viewCookie", 'block', {
              type: "day",
              value: 7
            }, "/crumbsjs");
            crumbsjs__WEBPACK_IMPORTED_MODULE_0___default().ls.set("viewCookie", 'block', {
              type: "day",
              value: 7
            }, "/crumbsjs");
          }
        }
      }
    });
  });
});

/***/ })

}]);
//# sourceMappingURL=src_js_trainingsaanbod_js.scripts.min.js.map